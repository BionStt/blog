@model Blog.Website.Core.ViewModels.Author.BlogStories.EditBlogStoryViewModel
@{
    ViewBag.Title = "Edit story";
}
<article class="content item-editor-page">
    <div class="row card card-block">
        <form id="edit-story" asp-route="edit-story" method="POST">
            <div class="col-xl-10 col-md-9">
                <div class="form-group">
                    <label class="control-label" asp-for="Title"></label>
                    <input asp-for="Title" type="text" class="form-control" placeholder="Blog story title">
                    <span class="has-error" asp-validation-for="Title"></span>
                </div>
                <div class="form-group">
                    <label class="control-label" asp-for='Description'></label>
                    <textarea rows="2" class="form-control" asp-for="Description"></textarea>
                    <span class="has-error" asp-validation-for="Description"></span>
                </div>
                <div class="form-group">
                    <label class="control-label" asp-for='SeoDescription'></label>
                    <textarea rows="2" class="form-control" asp-for="SeoDescription"></textarea>
                    <span class="has-error" asp-validation-for="SeoDescription"></span>
                </div>
                <div class="form-group">
                    <label class="control-label" asp-for="Keywords"></label>
                    <input asp-for="Keywords" type="text" class="form-control" placeholder="keyword, keyword1, keyword2">
                    <span class="has-error" asp-validation-for="Keywords"></span>
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon">https://d2funlife.com/</span>
                        <input type="text" class="form-control" placeholder="input-story-alias" asp-for="Alias">
                    </div>
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon">Main image</span>
                        <input type="text" class="form-control" placeholder="http://imagehost.com" asp-for="StoryImageUrl">
                    </div>
                    <span class="has-error" asp-validation-for="StoryImageUrl"></span>
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon">Thumb image</span>
                        <input type="text" class="form-control" placeholder="http://imagehost.com" asp-for="StoryThumbUrl">
                    </div>
                    <span class="has-warning" asp-validation-for="StoryThumbUrl"></span>
                </div>
                <div class="form-group">
                    <textarea class="editor" asp-for="Content"></textarea>
                </div>
            </div>
            <div class="col-xl-2 col-md-3">
                <button type="button" class="btn btn-primary btn-block" id="publish-btn" set="@(Model.IsPublished
                                                                                                    ? "false"
                                                                                                    : "true")">
                    @(Model.IsPublished
                          ? "Un publish"
                          : "Publish")
                </button>
                @if(Model.Id != Guid.Empty)
                {
                    <a id="share-link" target="_blank" class="btn btn-primary btn-block" href="@Model.GetShareLink(Url)">Preview</a>
                    <button type="button" class="btn btn-primary btn-block" id="update-access-token-btn">
                        @(String.IsNullOrWhiteSpace(Model.AccessToken)
                              ? "Create access token"
                              : "Change access token")
                    </button>
                }
                @if(!String.IsNullOrWhiteSpace(Model.AccessToken))
                {
                    <button type="button" class="btn btn-primary btn-block" id="remove-access-token-btn">Remove access token</button>
                }
                @if(Model.Id != Guid.Empty)
                {
                    <button type="button" class="btn btn-primary btn-block" id="remove-story-btn">Remove story</button>
                }
                <button type="button" class="btn btn-primary btn-block mb-1 submit">Save story</button>
                @if(!System.String.IsNullOrWhiteSpace(Model.CreateDate))
                {
                    <div class="form-group">
                        <label class="control-label">Craeted date</label>
                        <div>@Model.CreateDate</div>
                    </div>
                }
                <div class="form-group">
                    <label class="control-label">Status</label>
                    <section id="story-status">
                        @if(Model.IsPublished)
                        {
                            <i class="fa fa-smile-o status-publish"></i>
                            <span> Published</span>
                        }
                        else
                        {
                            <i class="fa fa-meh-o status-draft"></i>
                            <span> Draft</span>
                        }
                    </section>
                </div>
                <div class="form-group">
                    <label class="control-label">Tags</label>
                    <input asp-for="TagsSelected" type="text" class="form-control tag-editor"/>
                </div>
            </div>
            <input type="hidden" asp-for="Id"/>
            <input type="hidden" asp-for="Alias"/>
            <input type="hidden" asp-for="AccessToken"/>
            <input type="hidden" asp-for="IsPublished"/>
        </form>
    </div>
</article>

@section additionalScripts
{
    <script src="https://cdn.jsdelivr.net/npm/tinymce@4.7.13/tinymce.min.js"></script>
    <script src="~/blog-story-edit.js?v=@Versioning.Current"></script>
    <script>
        var tags=@Html.Raw(Model.Tags);
        blogStoryManager.initialize(tags);
    </script>
}

@section headerMenu{
    @await Component.InvokeAsync("HeaderMenu")
}